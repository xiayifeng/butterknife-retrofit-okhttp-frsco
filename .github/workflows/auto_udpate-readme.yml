name: Auto Update README and Commit to master

on:
  schedule:
    - cron: "0 0 25 * *" # UTC 时间每月25号0点
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          ref: master # 切换到 master 分支
          persist-credentials: false
          fetch-depth: 0 # 拉取完整历史，避免浅克隆问题

      - name: Configure Git identity (local repo)
        run: |
          # 配置当前仓库的用户信息（优先级高于全局，确保提交有效）
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          # 验证配置是否生效
          echo "✅ Git 用户名：$(git config user.name)"
          echo "✅ Git 邮箱：$(git config user.email)"

      - name: Force create README.md (确保文件生成)
        run: |
          set -e
          # 直接创建/覆盖 README.md，避免依赖原有文件
          echo "# 自动更新测试" > README.md
          echo "" >> README.md
          echo "最后更新时间：$(date +'%Y-%m-%d %H:%M:%S %Z')" >> README.md
          echo "这是 GitHub Actions 自动生成的文件" >> README.md
          
          # 验证文件是否生成
          if [ -f "README.md" ]; then
            echo "✅ README.md 生成成功，文件内容："
            cat README.md
          else
            echo "❌ README.md 生成失败！"
            exit 1
          fi

      - name: Stage README.md (关键：添加到 Git 暂存区)
        run: |
          set -e
          # 执行 git add，确保文件被暂存
          git add README.md
          
          # 验证暂存结果：检查文件是否在暂存区
          if git diff --cached --quiet README.md; then
            echo "❌ README.md 暂存失败（未在暂存区）"
            git status # 打印 Git 状态，辅助排查
            exit 1
          else
            echo "✅ README.md 已成功暂存到 Git 暂存区"
            git status # 打印状态，确认暂存结果
          fi

      - name: Commit and push changes
        run: |
          set -e
          # 1. 执行提交（确保有暂存文件）
          if ! git commit -m "chore: auto create README on $(date +'%Y-%m-%d')"; then
            echo "❌ git commit 失败，检查是否有暂存文件："
            git status
            exit 1
          fi
          echo "✅ git commit 成功！"

          # 2. 执行推送（使用 PAT 授权，添加详细日志）
          echo "✅ 开始推送至 master 分支..."
          if ! git push https://${{ secrets.AUTO_COMMIT_PAT }}@github.com/${{ github.repository }}.git HEAD:master --verbose; then
            echo "❌ git push 失败，错误信息如上"
            exit 1
          fi
          echo "✅ 推送成功！README.md 已更新到 master 分支"
        env:
          AUTO_COMMIT_PAT: ${{ secrets.AUTO_COMMIT_PAT }}
