name: Auto Update README and Commit to feature/test

on:
  schedule:
    - cron: "0 0 25 * *" # UTC 时间每月25号0点
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          ref: master
          # 移除 sparse-checkout：若 README 不存在，sparse-checkout 会导致无法创建新文件
          # sparse-checkout: |
          #   README.md
          persist-credentials: false

      - name: Configure Git identity
        run: |
          git config --global user.name "yifengXia"
          git config --global user.email "441740874#qq.com"

      # 修复核心：兼容 README 存在/不存在的场景，开启错误检测
      - name: Update or create README.md
        run: |
          set -e # 开启错误检测：脚本遇到错误立即终止，避免静默失败
          # 定义新内容的头部（包含更新时间）
          NEW_CONTENT_HEADER="# 自动更新测试\n\n最后更新时间：$(date +'%Y-%m-%d %H:%M:%S %Z')\n\n"
          
          # 判断 README.md 是否存在
          if [ -f "README.md" ]; then
            # 场景1：文件存在 → 保留原有内容，追加到头部之后
            EXISTING_CONTENT=$(cat README.md)
            echo -e "${NEW_CONTENT_HEADER}${EXISTING_CONTENT}" > README.md
            echo "README.md 已更新（保留原有内容）"
          else
            # 场景2：文件不存在 → 新建文件，写入初始内容
            echo -e "${NEW_CONTENT_HEADER}这是自动生成的 README 文件，后续将每月25号更新。" > README.md
            echo "README.md 不存在，已新建文件并写入初始内容"
          fi

      - name: Check if README has changes
        id: check_changes
        run: |
          if git diff --quiet README.md; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git add README.md
          git commit -m "chore: auto update README on $(date +'%Y-%m-%d')"
          git push https://${{ secrets.AUTO_COMMIT_PAT }}@github.com/${{ github.repository }}.git HEAD:feature/test
        env:
          AUTO_COMMIT_PAT: ${{ secrets.AUTO_COMMIT_PAT }}
